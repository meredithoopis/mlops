name: Airflow CI/CD on Self-Hosted Runner

on:
  push:
    branches:
      - main 

env:
  IMAGE_NAME: elliana2811/car_detection 
  DOCKER_COMPOSE_FILE: ./data_pipeline/flow/docker-compose.prod.yml 

jobs:
  build-and-push-image:
    name: Build and Push Airflow Docker Image
    runs-on: ubuntu-latest 
    outputs:
      image_tag_sha: ${{ steps.meta.outputs.version }} 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=,suffix=,format=short 
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build_and_push
        uses: docker/build-push-action@v6
        with:
          context: ./data_pipeline/flow 
          file: ./data_pipeline/flow/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha 
          cache-to: type=gha,mode=max 

  deploy-airflow:
    name: Deploy Airflow Services
    runs-on: self-hosted
    needs: build-and-push-image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create or Update .env file with IMAGE_TAG
        if: ${{ always() }}
        env:
          ENV_CONTENT_FROM_SECRET: ${{ secrets.ENV_FILE_CONTENT }}
          BUILT_IMAGE_TAG: ${{ needs.build-and-push-image.outputs.image_tag_sha }}
        run: |
          env_file="./data_pipeline/flow/.env"
          image_tag="${BUILT_IMAGE_TAG:-latest}"

          # Start from secret content
          echo "$ENV_CONTENT_FROM_SECRET" > "$env_file"

          # Remove any existing IMAGE_TAG line
          sed -i '/^IMAGE_TAG=/d' "$env_file"

          # Add new IMAGE_TAG if available
          if [ -n "$image_tag" ]; then
            echo "IMAGE_TAG=${image_tag}" >> "$env_file"
            echo ".env file created/updated at $env_file with IMAGE_TAG=$image_tag"
          else
            echo "WARNING: BUILT_IMAGE_TAG is empty. Using 'latest'."
          fi

      - name: Verify .env file existence
        run: |
          if [ ! -f "./data_pipeline/flow/.env" ]; then
            echo "ERROR: .env file not found at ./data_pipeline/flow/.env"
            exit 1
          else
            echo ".env file verified successfully."
          fi

      - name: Log in to Docker Hub (on self-hosted runner)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Stop and remove previous Docker containers and volumes
        run: docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} down -v

      - name: Pull specific SHA tagged image
        run: docker pull ${{ env.IMAGE_NAME }}:${{ needs.build-and-push-image.outputs.image_tag_sha }}

      - name: Restart Airflow services using Docker Compose
        run: |
          echo "Restarting Airflow services with new image..."
          docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d --remove-orphans airflow-webserver airflow-scheduler airflow-init
          echo "Airflow services deployment attempted."